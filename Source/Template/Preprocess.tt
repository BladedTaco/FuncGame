<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".txt" #>

<#@ include file="$(ProjectDir)\T4.FileManager.VisualStudio19.ttinclude" #>

<#
    string ProjectDir = Host.ResolveParameterValue(null, null, "dir");

    // Start Common File Header
    var fileManager = T4FileManager.Create(this).EnableAutoIndent();
    fileManager.StartHeader();
#>
// ---------------------------------------------------------------------------------------
// This File ($filename$) is automatically generated by Preprocess.tt using T4 Text Transformer
// ANY changes made to this file directly are liable to be overwritten on compile
// If this file needs to be edited, Types.tt will need to be extended in its functionality
// ---------------------------- Start AutoGenerated File ---------------------------------
<#
    fileManager.FinishHeader();
    // End Common File Header


    string inputPath = Path.Combine(ProjectDir, 'Source', 'Preprocess', 'Types');
    string outputPath = Path.Combine(ProjectDir, 'Source', 'HonoursProj', 'Types');

    string[] files = Directory.GetFiles(inputPath, '*.h', SearchOption.AllDirectories);

    // New Include
    Regex srcFile = new Regex($"^#line 1 (?<file>.+)$");

    // For Each Input File
    foreach (string filepath in files) {
        // Start New File 
        string filename = Path.GetFileName(filepath);
        fileManager.StartNewFile(filename + ".gen.h", "HonoursProj", outputPath);

        // Define line regex
        Regex thisFile = new Regex($"^#line.+{filename}\"$");
        bool validOutput = false;

        // For Each Line In File
        string[] lines = File.ReadLines(filepath);
        foreach (string line in lines) {
            // Output lines when the last line directive was for the file
            if (thisFile.IsMatch(line)) {
                validOutput = true;
            } else if (srcFile.IsMatch(line)) {
                Match match = srcFile.Match(line);          
#>
#include <#=match.Groups["file"].Value#>
<# 
            } else if (validOutput and line != '') {
#>
<#=line#>
<#
            }
        }
    }
    fileManager.Process();
#>