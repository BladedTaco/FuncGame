// ---------------------------------------------------------------------------------------
// This File (Arrow_gen.h) is automatically generated by Preprocess.tt using T4 Text Transformer
// ANY changes made to this file directly are liable to be overwritten on compile
// If this file needs to be edited, Types.tt will need to be extended in its functionality
// ---------------------------- Start AutoGenerated File ---------------------------------
#pragma once
#include "C:\\Users\\v2tac\\Desktop\\UNI\\Semester 8\\FIT444X - Honours Thesis\\Unreal\\HonoursProj/Source/HonoursProj\\Types/Functor.h"
template <typename To, typename From>
class Arrow {
private:
	Function<To, From> _func;
	friend class Functor<Arrow<To, From>>;
public:
	Arrow(Function<To, From> f) {
		_func = f;
	}
	To operator()(const From& a) const {
		return _func(a);
	}
};
template <typename From, typename To>
using Arr = Arrow<To, From>;

 /*Added Typeclass Functor Instance Arrow*/ 

template <class A, typename From>
class Functor<Arr<From, A>> : public BaseFunctor<Arrow, A, From> {
private:
	template <class B>
	inline static auto _fmap = [](Function<B, A> func, Arr<From, A> f_a) -> Arr<From, B> {	

		return Arr<From, B>([=](const From& a) {											

			return func(f_a(a)); 											

	});
	};
public:
	template <class B>
	inline static auto fmap = curry(_fmap<B>);
};
