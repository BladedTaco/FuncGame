// ---------------------------------------------------------------------------------------
// This File (Num_gen.h) is automatically generated by Preprocess.tt using T4 Text Transformer
// ANY changes made to this file directly are liable to be overwritten on compile
// If this file needs to be edited, Types.tt will need to be extended in its functionality
// ---------------------------- Start AutoGenerated File ---------------------------------
#pragma once
#include "MacroUtils.h"
#include "Functional\Prelude.h"
#include "Functional\Typeclass.h"
#include "Types\Unpack.h"
class INum {
	public: const Arr<const VStar&, Arr<const VStar&, VStar > > plus() const; private: virtual VStar _plus ( const VStar& a , const VStar& b ) const = 0;
	public: const Arr<const VStar&, Arr<const VStar&, VStar > > minus() const; private: virtual VStar _minus ( const VStar& a , const VStar& b ) const = 0;
	public: const Arr<const VStar&, Arr<const VStar&, VStar > > times() const; private: virtual VStar _times ( const VStar& a , const VStar& b ) const = 0;
	public: const Arr<const VStar&, VStar > abs() const; private: virtual VStar _abs ( const VStar& value ) const = 0;
	public: const Arr<const VStar&, VStar > sign() const; private: virtual VStar _sign ( const VStar& value ) const = 0;
	public: const Arr<const VStar&, VStar > fromInt() const; private: virtual VStar _fromInt ( const VStar& integer ) const = 0;
	public: const Arr<const VStar&, VStar > negate() const; private: virtual VStar _negate ( const VStar& value ) const ;
};
