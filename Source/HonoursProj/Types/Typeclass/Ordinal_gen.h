// ---------------------------------------------------------------------------------------
// This File (Ordinal_gen.h) is automatically generated by Preprocess.tt using T4 Text Transformer
// ANY changes made to this file directly are liable to be overwritten on compile
// If this file needs to be edited, Types.tt will need to be extended in its functionality
// ---------------------------- Start AutoGenerated File ---------------------------------
#pragma once
#include "MacroUtils.h"
#include "Functional\Prelude.h"
#include "Functional\Typeclass.h"
#include "Types/Typeclass/Eq_gen.h"
enum class ORD : int {
	LT = -1,
	EQ = 0,
	GT = 1
};
class IOrdinal : public virtual IEq {
	public: const Arr<const VStar&, Arr<const VStar&, ORD > > ord() const; private: virtual ORD _ord ( const VStar& a , const VStar& b ) const = 0;
	public: const Arr<const VStar&, Arr<const VStar&, Bool > > lt() const; private: virtual Bool _lt ( const VStar& a , const VStar& b ) const ;
	public: const Arr<const VStar&, Arr<const VStar&, Bool > > lte() const; private: virtual Bool _lte ( const VStar& a , const VStar& b ) const ;
	public: const Arr<const VStar&, Arr<const VStar&, Bool > > gt() const; private: virtual Bool _gt ( const VStar& a , const VStar& b ) const ;
	public: const Arr<const VStar&, Arr<const VStar&, Bool > > gte() const; private: virtual Bool _gte ( const VStar& a , const VStar& b ) const ;
	public: const Arr<const VStar&, Arr<const VStar&, VStar > > min() const; private: virtual VStar _min ( const VStar& a , const VStar& b ) const ;
	public: const Arr<const VStar&, Arr<const VStar&, VStar > > max() const; private: virtual VStar _max ( const VStar& a , const VStar& b ) const ;
	private: virtual Bool _eq ( const VStar& a , const VStar& b ) const override ;
	private: virtual Bool _neq ( const VStar& a , const VStar& b ) const override ;
};
