// ---------------------------------------------------------------------------------------
// This File (AssetLoader_gen.h) is automatically generated by Types.tt using T4 Text Transformer
// ANY changes made to this file directly are liable to be overwritten on compile
// If this file needs to be edited, Types.tt will need to be extended in its functionality
// ---------------------------- Start AutoGenerated File ---------------------------------
#pragma once

#include "UObject/ConstructorHelpers.h"
#include "Engine/StaticMesh.h"
#include "Materials/MaterialInstance.h"
#include "Engine/DataTable.h"
#include "Blueprint/UserWidget.h"
#include "Components/WidgetComponent.h"


struct FResource_Material {
		ConstructorHelpers::FObjectFinderOptional<UMaterial> Base;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Black;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Brown;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Green;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Purple;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> DarkGrey;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> White;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Blue;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Orange;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Grey;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Pink;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Red;
		ConstructorHelpers::FObjectFinderOptional<UMaterialInstance> Gold;
		FResource_Material()
		:	Base(TEXT("/Game/MyContent/Materials/BaseMaterial.BaseMaterial"))
		,	Black(TEXT("/Game/MyContent/Materials/BlackMaterial.BlackMaterial"))
		,	Brown(TEXT("/Game/MyContent/Materials/BrownMaterial.BrownMaterial"))
		,	Green(TEXT("/Game/MyContent/Materials/GreenMaterial.GreenMaterial"))
		,	Purple(TEXT("/Game/MyContent/Materials/PurpleMaterial.PurpleMaterial"))
		,	DarkGrey(TEXT("/Game/MyContent/Materials/DarkGreyMaterial.DarkGreyMaterial"))
		,	White(TEXT("/Game/MyContent/Materials/WhiteMaterial.WhiteMaterial"))
		,	Blue(TEXT("/Game/MyContent/Materials/BlueMaterial.BlueMaterial"))
		,	Orange(TEXT("/Game/MyContent/Materials/OrangeMaterial.OrangeMaterial"))
		,	Grey(TEXT("/Game/MyContent/Materials/GreyMaterial.GreyMaterial"))
		,	Pink(TEXT("/Game/MyContent/Materials/PinkMaterial.PinkMaterial"))
		,	Red(TEXT("/Game/MyContent/Materials/RedMaterial.RedMaterial"))
		,	Gold(TEXT("/Game/MyContent/Materials/GoldMaterial.GoldMaterial"))
		{}
};

struct FResource_Mesh {
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> PuzzleCube;
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> Cylinder;
		FResource_Mesh()
		:	PuzzleCube(TEXT("/Game/MyContent/Meshes/PuzzleCube.PuzzleCube"))
		,	Cylinder(TEXT("/Game/MyContent/Meshes/Cylinder.Cylinder"))
		{}
};

struct FResource_Data {
		ConstructorHelpers::FObjectFinderOptional<UDataTable> TypesTable;
		FResource_Data()
		:	TypesTable(TEXT("DataTable'/Game/MyContent/Data/Tbl_Types.Tbl_Types'"))
		{}
};

struct FResource_Icon {
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> Percentage;
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> Counter;
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> Dice;
		ConstructorHelpers::FObjectFinderOptional<UStaticMesh> Ordinal;
		FResource_Icon()
		:	Percentage(TEXT("StaticMesh'/Game/MyContent/Meshes/percent.percent'"))
		,	Counter(TEXT("StaticMesh'/Game/MyContent/Meshes/Functions/Counter.Counter'"))
		,	Dice(TEXT("StaticMesh'/Game/MyContent/Meshes/Types/d20.d20'"))
		,	Ordinal(TEXT("StaticMesh'/Game/MyContent/Meshes/Types/ordinal.ordinal'"))
		{}
};

struct FResource_HUD {
		ConstructorHelpers::FClassFinder<UUserWidget> Function;
		ConstructorHelpers::FClassFinder<UUserWidget> Parameter;
		ConstructorHelpers::FClassFinder<UWidgetComponent> ASH;
		FResource_HUD()
		:	Function(TEXT("/Game/MyContent/Blueprints/HUD_Function"))
		,	Parameter(TEXT("/Game/MyContent/Blueprints/HUD_Parameter"))
		,	ASH(TEXT("/Game/MyContent/Blueprints/BP_AutoScalingHUD"))
		{}
};

struct FResource_TypeRepr {
		ConstructorHelpers::FClassFinder<AActor> Float;
		ConstructorHelpers::FClassFinder<AActor> Function;
		ConstructorHelpers::FClassFinder<AActor> Functor;
		ConstructorHelpers::FClassFinder<AActor> Int;
		ConstructorHelpers::FClassFinder<AActor> Ordinal;
		ConstructorHelpers::FClassFinder<AActor> Show;
		ConstructorHelpers::FClassFinder<AActor> Template;
		ConstructorHelpers::FClassFinder<AActor> Bool;
		ConstructorHelpers::FClassFinder<AActor> Char;
		ConstructorHelpers::FClassFinder<AActor> Maybe;
		ConstructorHelpers::FClassFinder<AActor> Number;
		FResource_TypeRepr()
		:	Float(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Float"))
		,	Function(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Function"))
		,	Functor(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Functor"))
		,	Int(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Int"))
		,	Ordinal(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Ordinal"))
		,	Show(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Show"))
		,	Template(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Template"))
		,	Bool(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Bool"))
		,	Char(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Char"))
		,	Maybe(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Maybe"))
		,	Number(TEXT("/Game/MyContent/Blueprints/Types/TypeRepr_Number"))
		{}
};



struct FAssets {
		FResource_Material Material;
		FResource_Mesh Mesh;
		FResource_Data Data;
		FResource_Icon Icon;
		FResource_HUD HUD;
		FResource_TypeRepr TypeRepr;
		FAssets()
		:	Material({})
		,	Mesh({})
		,	Data({})
		,	Icon({})
		,	HUD({})
		,	TypeRepr({})
		{}
};

FAssets* Assets();
